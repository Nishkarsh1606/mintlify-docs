{
  "openapi": "3.1.0",
  "info": {
    "title": "Cortex API",
    "description": "Documentation for Cortex's core upload and retrieval endpoints",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.usecortex.ai"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/upload/scrape_webpage": {
      "post": {
        "description": "Scrapes and processes content from a public webpage.",
        "parameters": [
          {
            "name": "web_url",
            "in": "query",
            "required": true,
            "description": "The public URL to scrape",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "description": "Tenant identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_tenant_id",
            "in": "query",
            "required": false,
            "description": "Sub-tenant identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webpage scraped successfully"
          }
        }
      }
    },
    "/upload/upload_document": {
      "post": {
        "description": "Uploads a document (e.g., PDF, DOCX) for processing and indexing.",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "description": "Tenant identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_tenant_id",
            "in": "query",
            "required": false,
            "description": "Sub-tenant identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "custom_metadata": {
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document uploaded and indexed successfully"
          }
        }
      }
    },
    "/upload/batch_upload": {
      "post": {
        "description": "Uploads multiple documents in a single request for processing and indexing.",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "description": "Tenant identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_tenant_id",
            "in": "query",
            "required": false,
            "description": "Sub-tenant identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "custom_metadata": {
                    "type": "string"
                  }
                },
                "required": [
                  "files"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch upload successful"
          }
        }
      }
    },
    "/upload/upload_app_sources": {
      "post": {
        "description": "Works similar to the upload endpoint but is specifically designed to upload multiple app sources (e.g., Gmail, Slack, Notion) in a single request for processing and indexing.",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "description": "Tenant identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_tenant_id",
            "in": "query",
            "required": false,
            "description": "Sub-tenant identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "html_base64": {
                          "type": "string"
                        },
                        "csv_base64": {
                          "type": "string"
                        },
                        "markdown": {
                          "type": "string"
                        },
                        "files": {
                          "type": "array"
                        },
                        "layout": {
                          "type": "array"
                        }
                      }
                    },
                    "cortex_metadata": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "content_type": {
                            "type": "string"
                          },
                          "content_url": {
                            "type": "string"
                          },
                          "misc": {
                            "type": "object"
                          },
                          "content": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "html_base64": {
                                "type": "string"
                              },
                              "csv_base64": {
                                "type": "string"
                              },
                              "markdown": {
                                "type": "string"
                              },
                              "files": {
                                "type": "array"
                              },
                              "layout": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "type",
                    "timestamp",
                    "content"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App sources uploaded successfully"
          }
        }
      }
    },
    "/search/qna": {
      "post": {
        "description": "Ask a question based on uploaded documents or sessions.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "description": "The user query"
                  },
                  "user_name": {
                    "type": "string",
                    "description": "User name"
                  },
                  "user_instructions": {
                    "type": "string",
                    "description": "Accept custom, specific instructions from the user"
                  },
                  "session_id": {
                    "type": "string",
                    "description": "Chat session ID"
                  },
                  "tenant_id": {
                    "type": "string",
                    "description": "Tenant identifier"
                  },
                  "sub_tenant_id": {
                    "type": "string",
                    "description": "Sub-tenant identifier"
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "Enable streaming"
                  },
                  "context_list": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of document IDs"
                  },
                  "search_mode": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "e.g., 'creative', 'web'"
                  },
                  "top_n": {
                    "type": "number",
                    "description": "Number of results to return"
                  },
                  "ai_generation": {
                    "type": "boolean",
                    "description": "Enable AI answer generation"
                  },
                  "highlight_chunks": {
                    "type": "boolean",
                    "description": "Return source chunks"
                  },
                  "search_alpha": {
                    "type": "number",
                    "format": "float",
                    "description": "Weight for semantic match"
                  },
                  "recency_bias": {
                    "type": "number",
                    "format": "float",
                    "description": "Recency preference"
                  },
                  "multi_step_reasoning": {
                    "type": "boolean",
                    "description": "Enable multi-step reasoning for complex questions. Default is true, setting to false will disable auto-enable",
                    "default": true
                  }
                },
                "required": [
                  "question",
                  "session_id",
                  "tenant_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Question answered successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
